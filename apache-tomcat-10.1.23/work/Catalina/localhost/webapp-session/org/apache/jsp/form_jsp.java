/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-06-03 22:34:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.emma.apiservlet.webapp.session.models.*;
import java.util.*;
import java.time.format.DateTimeFormatter;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("org.emma.apiservlet.webapp.session.models");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 List<Categoria> categorias = (List<Categoria>) request.getAttribute("categorias");
    Map<String, String> errores = (Map<String, String>) request.getAttribute("errores");
    Producto producto = (Producto) request.getAttribute("producto");
    String fecha = producto.getFechaRegistro() != null ? producto.getFechaRegistro().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")) : "";

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Formulario productos</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>Formulario productos</h1>\r\n");
      out.write("<form action=\"");
      out.print(request.getContextPath());
      out.write("/productos/form\" method=\"post\">\r\n");
      out.write("    <div>\r\n");
      out.write("        <label for=\"nombre\">Nombre</label>\r\n");
      out.write("        <div>\r\n");
      out.write("            <input type=\"text\" name=\"nombre\" id=\"nombre\"\r\n");
      out.write("                   value=\"");
      out.print(producto.getNombre() != null ? producto.getNombre(): "");
      out.write("\"\r\n");
      out.write("                   placeholder=\"nombre del producto\">\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (errores != null && errores.containsKey("nombre")) {
      out.write("\r\n");
      out.write("        <div style=\"color: red\">");
      out.print(errores.get("nombre"));
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <label for=\"precio\">Precio</label>\r\n");
      out.write("        <div>\r\n");
      out.write("            <input type=\"text\" name=\"precio\" id=\"precio\"\r\n");
      out.write("                   value=\"");
      out.print(producto.getPrecio() != 0 ? producto.getPrecio():"");
      out.write("\"\r\n");
      out.write("                   placeholder=\"precio del producto\">\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (errores != null && errores.containsKey("precio")) {
      out.write("\r\n");
      out.write("        <div style=\"color: red\">");
      out.print(errores.get("precio"));
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <label for=\"sku\">Sku</label>\r\n");
      out.write("        <div>\r\n");
      out.write("            <input type=\"text\" name=\"sku\" id=\"sku\" value=\"");
      out.print(producto.getSku()!=null? producto.getSku(): "");
      out.write("\"\r\n");
      out.write("                   placeholder=\"SKU\">\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (errores != null && errores.containsKey("sku")) {
      out.write("\r\n");
      out.write("        <div style=\"color: red\">");
      out.print(errores.get("sku"));
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <label for=\"fecha_registro\">Fecha Registro</label>\r\n");
      out.write("        <div>\r\n");
      out.write("            <input type=\"date\" name=\"fecha_registro\" id=\"fecha_registro\" value=\"");
      out.print(fecha);
      out.write("\">\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (errores != null && errores.containsKey("fecha_registro")) {
      out.write("\r\n");
      out.write("        <div style=\"color: red\">");
      out.print(errores.get("fecha_registro"));
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <label for=\"categoria\">Categoria</label>\r\n");
      out.write("        <div>\r\n");
      out.write("            <select name=\"categoria\" id=\"categoria\">\r\n");
      out.write("                <option value=\"\">Seleccione la categor√≠a</option>\r\n");
      out.write("                ");
 for (Categoria categoria : categorias) { 
      out.write("\r\n");
      out.write("                <option value=\"");
      out.print(categoria.getId());
      out.write('"');
      out.write(' ');
      out.print(categoria.getId().equals(producto.getCategoria().getId()) ? "selected" : "");
      out.write('>');
      out.print(categoria.getNombre());
      out.write("\r\n");
      out.write("                </option>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (errores != null && errores.containsKey("categoria")) {
      out.write("\r\n");
      out.write("        <div style=\"color: red\">");
      out.print(errores.get("categoria"));
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <div>\r\n");
      out.write("        <input type=\"submit\" value=\"");
      out.print((producto.getId() != null && producto.getId() >0) ? "Editar": "Crear");
      out.write("\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <input type=\"hidden\" name=\"id\" value=\"");
      out.print(producto.getId());
      out.write("\">\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
