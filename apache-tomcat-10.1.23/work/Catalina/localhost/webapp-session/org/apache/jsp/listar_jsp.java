/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-06-05 22:59:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.emma.apiservlet.webapp.session.models.*;
import java.util.Optional;
import java.util.List;
import org.emma.apiservlet.webapp.session.models.Carro;

public final class listar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/layout/footer.jsp", Long.valueOf(1717621308000L));
    _jspx_dependants.put("/layout/header.jsp", Long.valueOf(1717624370000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("org.emma.apiservlet.webapp.session.models");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("org.emma.apiservlet.webapp.session.models.Carro");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Optional");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 List<Producto> productos = (List<Producto>) request.getAttribute("productos");
    Optional<String> username = (Optional<String>) request.getAttribute("username");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
String title = (String) request.getAttribute("title");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>");
      out.print(title);
      out.write("</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("          integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("            integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\"\r\n");
      out.write("            crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\">CRUD</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link active\" aria-current=\"page\" href=\"");
      out.print(request.getContextPath());
      out.write("\">Home</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/productos\">Productos</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/carro/ver\">Ver Carro (");
      out.print(((Carro)request.getSession().getAttribute("carro")).getItems().size());
      out.write(")</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item dropdown\">\r\n");
      out.write("                    <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("                        ");
      out.print( request.getSession().getAttribute("username") != null? "Cuenta" : "");
      out.write("\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <ul class=\"dropdown-menu\">\r\n");
      out.write("                        <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write('/');
      out.print(request.getSession().getAttribute("username") != null? "logout" : "login");
      out.write("\">\r\n");
      out.write("                            ");
      out.print( request.getSession().getAttribute("username") != null? "Logout" : "Login");
      out.write("\r\n");
      out.write("                        </a>\r\n");
      out.write("                        </li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">");
      out.write("\r\n");
      out.write("<h3>");
      out.print(title);
      out.write("</h3>\r\n");
if (username.isPresent()) {
      out.write("\r\n");
      out.write("<div class=\"alert alert-info\">Hola ");
      out.print(username.get());
      out.write(", bienvenido!</div>\r\n");
      out.write("<p><a class=\"btn btn-sm btn-primary my-2\" href=\"");
      out.print(request.getContextPath());
      out.write("/productos/form\"> crear [+]</a></p>\r\n");
}
      out.write("\r\n");
      out.write("<table class=\"table table-primary table-hover table-striped\">\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th scope=\"col\">id</th>\r\n");
      out.write("        <th scope=\"col\">Nombre</th>\r\n");
      out.write("        <th scope=\"col\">Tipo</th>\r\n");
      out.write("        ");
if (username.isPresent()) {
      out.write("\r\n");
      out.write("        <th scope=\"col\">Precio</th>\r\n");
      out.write("        <th scope=\"col\">Agregar</th>\r\n");
      out.write("        <th scope=\"col\">Editar</th>\r\n");
      out.write("        <th scope=\"col\">Eliminar</th>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");
 for (Producto p : productos) {
      out.write("\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td><strong>");
      out.print(p.getId());
      out.write("\r\n");
      out.write("        </strong></td>\r\n");
      out.write("        <td>");
      out.print(p.getNombre());
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("        <td>");
      out.print(p.getCategoria().getNombre());
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("        ");
if (username.isPresent()) {
      out.write("\r\n");
      out.write("        <td>");
      out.print(p.getPrecio());
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("        <td><a class=\"btn btn-sm btn-primary\" href=\"");
      out.print(request.getContextPath());
      out.write("/carro/agregar?id=");
      out.print(p.getId());
      out.write("\">Agregar\r\n");
      out.write("            al carro</a></td>\r\n");
      out.write("        <td><a class=\"btn btn-sm btn-success\" href=\"");
      out.print(request.getContextPath());
      out.write("/productos/form?id=");
      out.print(p.getId());
      out.write("\">Editar</a>\r\n");
      out.write("        </td>\r\n");
      out.write("        <td><a class=\"btn btn-sm btn-danger\" onclick=\"return confirm('¿Estás seguro de eliminar el producto?')\"\r\n");
      out.write("               href=\"");
      out.print(request.getContextPath());
      out.write("/productos/eliminar?id=");
      out.print(p.getId());
      out.write("\">Eliminar</a></td>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");
}
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
